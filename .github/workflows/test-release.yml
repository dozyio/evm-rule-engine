name: Test

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  FOUNDRY_PROFILE: ci

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Show Forge version
        run: |
          forge --version

      - name: Run Forge fmt
        run: |
          forge fmt --check

      - name: Install npm deps
        run: npm ci

      - name: Start anvil instances, run tests, and clean up
        run: |
          anvil --port 8545 --chain-id 31337 > anvil8545.log 2>&1 &
          ANVIL_8545_PID=$!

          anvil --port 8546 --chain-id 31338 > anvil8546.log 2>&1 &
          ANVIL_8546_PID=$!

          trap "kill $ANVIL_8545_PID $ANVIL_8546_PID" EXIT

          sleep 5

          npm run test

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Show Forge version
        run: |
          forge --version

      - name: Run Forge fmt
        run: |
          forge fmt --check

      - name: Install npm deps
        run: npm ci

      - name: Build contracts
        run: npm run build:contract

      - name: Build
        run: npm run build

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm run release
